{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.js","components/Task/StyledNewTask.styles.js","components/Task/NewTask.js","app/actions.js","components/List/List.styles.js","components/Input/Input.styles.js","components/Input/Input.js","components/Sorting/SortingBlock.styles.js","components/Sorting/SortingBlock.js","components/List/List.js","App.js","app/reduser.js","app/store.js","index.js"],"names":["StyledTitle","styled","h6","Title","StyledNewTask","div","TaskContainer","Text","props","isCompleted","Date","p","ImgCheckBoxStyled","img","ImgDeleteStyled","NewTask","task","defaultValue","text","className","style","fontSize","color","backgroundColor","borderRadius","marginRight","skipHover","focus","date","ImgDelete","dispatch","useDispatch","onClick","type","id","height","src","alt","ImgCheckBox","ListWrapper","MainBlock","StyledInput","input","AddButtonStyled","button","Input","handleSubmit","handleChangeValue","value","placeholder","onChange","onKeyDown","AddButton","addTaskByButton","SortingDiv","SortButtonStyled","ButtonDeleteCheckedStyled","ButtonDeleteAllStyled","SortButton","useState","buttonText","setButtonText","ButtonDeleteChecked","ButtonDeleteAll","List","todoList","useSelector","state","tasks","sortingToggle","isSortON","addTodo","oneMoreTask","nanoid","dayjs","format","isSortedByAlphabet","payload","addToDoDefaultByAlphabet","addToDoInOrder","setValue","e","keyCode","trim","target","map","item","App","handleDeleteTask","action","filter","handleCompleteTask","handleDeleteChecked","handleAddAlphabetically","newState","Object","assign","sort","a","b","localeCompare","handleDontSortAlphabetically","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15a685ab.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h6`\n  font-family: \"Praise\", cursive;\n  color: #182335;\n  font-size: 60px;\n  text-align: center;\n  margin-block-start: 0.1em;\n  margin-block-end: 0.1em;\n  padding-bottom: 0;\n`;\n","import { StyledTitle } from \"./Title.styles\";\n\nexport const Title = () => {\n  return <StyledTitle>To-do list</StyledTitle>;\n};\n","import styled from \"styled-components\";\n\nexport const StyledNewTask = styled.div`\n  font-size: 23px;\n  padding-left: 15px;\n  margin: 10px;\n  background: #d0c08aff;\n  border-radius: 12px;\n\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\nexport const TaskContainer = styled.div``;\n\nexport const Text = styled.h6`\n  ${(props) =>\n    props.isCompleted\n      ? \"text-decoration: line-through;\\n\" +\n        \"  color: gray;\\n\" +\n        \"  transition: 1s;\"\n      : \"none\"};\n  display: flex;\n  margin-top: 0;\n  line-height: 1.2;\n  font-family: \"Raleway\", sans-serif;\n  margin-block-end: 0.1em;\n`;\n\nexport const Date = styled.p`\n  font-size: 15px;\n  text-align: right;\n  margin: 0 5px 5px 5px;\n  padding: 3px;\n  font-family: \"Roboto\", sans-serif;\n`;\n\nexport const ImgCheckBoxStyled = styled.img`\n  margin: 10px 3px 5px 3px;\n  :hover {\n    transform: scale(1.2);\n    transition: 0.4s;\n`;\n\nexport const ImgDeleteStyled = styled.img`\n  margin: 10px 3px 5px 3px;\n  padding-bottom: 2px;\n  :hover {\n    transform: scale(1.2);\n    transition: 0.4s;\n`;\n","import {\n  Date,\n  ImgCheckBoxStyled,\n  ImgDeleteStyled,\n  StyledNewTask,\n  Text,\n} from \"./StyledNewTask.styles\";\nimport { useDispatch } from \"react-redux\";\nimport { completeTask, deleteTask } from \"../../app/actions\";\nimport { EditText } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\n\nexport const NewTask = ({ task }) => {\n  return (\n    <StyledNewTask>\n      <ImgCheckBox task={task} />\n      <ImgDelete task={task} />\n      <Text isCompleted={task.isCompleted}>\n        <EditText\n          defaultValue={task.text}\n          className={\"customInput\"}\n          style={{\n            fontSize: \"30px\",\n            color: \"white\",\n            backgroundColor: \"linear-gradient(#182335, #e15546)\",\n            borderRadius: \"7px\",\n            marginRight: \"10px\",\n            skipHover: true,\n            focus: {\n              backgroundColor: \"#fcfff5\",\n            },\n          }}\n        >\n          {\" \"}\n        </EditText>\n      </Text>\n      <Date>Created:{task.date}</Date>\n    </StyledNewTask>\n  );\n};\n\nexport const ImgDelete = ({ task }) => {\n  const dispatch = useDispatch();\n  return (\n    <ImgDeleteStyled\n      onClick={() => dispatch(deleteTask(task.id))}\n      height=\"36px\"\n      src=\"trash.svg\"\n      alt=\"trash\"\n    />\n  );\n};\n\nexport const ImgCheckBox = ({ task }) => {\n  const dispatch = useDispatch();\n  return (\n    <ImgCheckBoxStyled\n      onClick={() => dispatch(completeTask(task.id))}\n      height=\"36px\"\n      src=\"check.svg\"\n      alt=\"checkbox\"\n    />\n  );\n};\n","export const addToDoDefaultByAlphabet = (oneMoreTask) => ({\n  type: \"ADD_TODO\",\n  payload: oneMoreTask,\n});\n\nexport const deleteAll = () => ({\n  type: \"DELETE_ALL\",\n});\n\nexport const deleteTask = (id) => ({\n  type: \"DELETE_TASK\",\n  id,\n});\n\nexport const completeTask = (id) => ({\n  type: \"COMPLETE_TASK\",\n  id,\n});\n\nexport const deleteChecked = () => ({\n  type: \"DELETE_CHECKED\",\n});\n\nexport const TurnOFFAlphabeticallyOrder = () => ({\n  type: \"SORT_ALPHABETICALLY\",\n});\n\nexport const addToDoInOrder = (oneMoreTask) => ({\n  type: \"ADD_TODO_IN_ORDER\",\n  payload: oneMoreTask,\n});\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div`\n  font-family: \"Raleway\", sans-serif;\n  font-size: 15px;\n  background-color: #182335;\n  max-width: 100%;\n  width: 600px;\n  border-radius: 12px;\n`;\nexport const MainBlock = styled.div`\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Control = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n  background: #fcfff5;\n  box-sizing: border-box;\n  width: 500px;\n  max-width: 80%;\n  height: 50px;\n  font-size: 23px;\n  font-weight: normal;\n  padding-left: 15px;\n  border: 5px solid #b04337;\n  border-radius: 12px;\n  color: gray;\n  font-family: \"Raleway\", sans-serif;\n  margin-bottom: 14px;\n\n  :focus {\n    outline: 0;\n    border: 5px solid #b04337ff;\n    background-color: #eae4cc;\n    transition: 0.7s linear;\n    font-size: 23px;\n    color: rgb(32, 32, 32);\n  }\n`;\n\nexport const AddButtonStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 8px 20px 16px 15px;\n  height: 40px;\n  width: 15.5%;\n  border-radius: 7px;\n  margin: 5px 0 5px 0.5em;\n  font-size: 20px;\n  text-align: center;\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n","import { AddButtonStyled, StyledInput } from \"./Input.styles\";\n\nexport const Input = ({ handleSubmit, handleChangeValue, value }) => {\n  return (\n    <StyledInput\n      type=\"text\"\n      value={value}\n      placeholder={\"Enter your task\"}\n      onChange={handleChangeValue}\n      onKeyDown={handleSubmit}\n    />\n  );\n};\n\nexport const AddButton = ({ addTaskByButton }) => {\n  return <AddButtonStyled onClick={addTaskByButton}>Add</AddButtonStyled>;\n};\n","import styled from \"styled-components\";\n\nexport const SortingDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  font-family: \"Raleway\", sans-serif;\n`;\n\nexport const SortButtonStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 10px 20px 10px 10px;\n  height: auto;\n  width: 180px;\n  min-width: 30%;\n  border-radius: 7px;\n  margin: 5px 5px 5px 30px;\n  font-size: 1.2em;\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\nexport const ButtonDeleteCheckedStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 10px 20px 10px 20px;\n  height: auto;\n  min-width: 30%;\n  width: 180px;\n  border-radius: 7px;\n  margin: 5px 30px 5px 5px;\n  font-size: 1.3em;\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\nexport const ButtonDeleteAllStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 10px 20px 10px 20px;\n  height: auto;\n  min-width: 30%;\n  width: 180px;\n  border-radius: 7px;\n  margin: 5px 10px 5px 10px;\n  font-size: 1.3em;\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n","import {\n  ButtonDeleteAllStyled,\n  ButtonDeleteCheckedStyled,\n  SortButtonStyled,\n} from \"./SortingBlock.styles\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  deleteAll,\n  deleteChecked,\n  TurnOFFAlphabeticallyOrder,\n} from \"../../app/actions\";\nimport { useState } from \"react\";\n\nexport const SortButton = () => {\n  const [buttonText, setButtonText] = useState(\"ON\");\n\n  const dispatch = useDispatch();\n\n  const handlerOnclick = () => {\n    setButtonText(\"OFF\");\n    dispatch(TurnOFFAlphabeticallyOrder());\n  };\n\n  return (\n    <SortButtonStyled\n      onClick={() => {\n        handlerOnclick();\n      }}\n    >\n      Adding tasks in alphabetical order {buttonText}\n    </SortButtonStyled>\n  );\n};\n\nexport const ButtonDeleteChecked = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <ButtonDeleteCheckedStyled onClick={() => dispatch(deleteChecked())}>\n      Delete checked\n    </ButtonDeleteCheckedStyled>\n  );\n};\n\nexport const ButtonDeleteAll = () => {\n  const dispatch = useDispatch();\n  return (\n    <ButtonDeleteAllStyled onClick={() => dispatch(deleteAll())}>\n      Delete all\n    </ButtonDeleteAllStyled>\n  );\n};\n","import dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToDoDefaultByAlphabet, addToDoInOrder } from \"../../app/actions\";\nimport { TaskContainer } from \"../Task/StyledNewTask.styles\";\nimport { NewTask } from \"../Task/NewTask\";\nimport { ListWrapper, MainBlock } from \"./List.styles\";\nimport { AddButton, Input } from \"../Input/Input\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useState } from \"react\";\nimport { SortingDiv } from \"../Sorting/SortingBlock.styles\";\nimport {\n  ButtonDeleteAll,\n  ButtonDeleteChecked,\n  SortButton,\n} from \"../Sorting/SortingBlock\";\n\nexport const List = () => {\n  const dispatch = useDispatch();\n  const todoList = useSelector((state) => state.tasks);\n  const sortingToggle = useSelector((state) => state.isSortON);\n  const addTodo = (text) => {\n    const id = nanoid();\n    const isCompleted = false;\n    const date = dayjs().format(\"DD/MM/YYYY, HH:mm \");\n    const isSortedByAlphabet = false;\n    const oneMoreTask = { id, text, isCompleted, date, isSortedByAlphabet };\n\n    sortingToggle\n      ? dispatch(addToDoDefaultByAlphabet(oneMoreTask))\n      : dispatch(addToDoInOrder(oneMoreTask));\n  };\n\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    if (e.keyCode === 13 && value.trim()) {\n      addTodo(value.trim());\n      setValue(\"\");\n    }\n  };\n\n  const handleChangeValue = (e) => setValue(e.target.value);\n\n  const addTaskByButton = () => {\n    if (value.trim()) {\n      addTodo(value);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <MainBlock>\n      <ListWrapper>\n        <Input\n          addTodo={addTodo}\n          handleSubmit={handleSubmit}\n          handleChangeValue={handleChangeValue}\n          value={value}\n        />\n        <AddButton addTaskByButton={addTaskByButton} />\n        <TaskContainer>\n          {todoList.map((item) => (\n            <NewTask task={item} key={item.id} />\n          ))}\n        </TaskContainer>\n        <SortingDiv>\n          <SortButton />\n          <ButtonDeleteAll />\n          <ButtonDeleteChecked />\n        </SortingDiv>\n      </ListWrapper>\n    </MainBlock>\n  );\n};\n","import React from \"react\";\nimport { Title } from \"./components/Title/Title\";\nimport { List } from \"./components/List/List\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","const handleDeleteTask = (state, action) => {\n  return {\n    tasks: state.tasks.filter((item) => item.id !== action.id),\n  };\n};\n\nconst handleCompleteTask = (state, action) => {\n  return {\n    tasks: state.tasks.map((item) =>\n      item.id !== action.id ? item : { ...item, isCompleted: !item.isCompleted }\n    ),\n  };\n};\n\nconst handleDeleteChecked = (state) => {\n  return {\n    tasks: state.tasks.filter((item) => item.isCompleted === false),\n  };\n};\n\nconst handleAddAlphabetically = (state, action) => {\n  let newState = Object.assign(state);\n  newState = {\n    ...newState,\n    tasks: [...state.tasks, action.payload],\n    isSortON: true,\n  };\n  const sortedTasks = Object.assign(newState).tasks.sort((a, b) =>\n    a.text.localeCompare(b.text)\n  );\n  return {\n    tasks: sortedTasks,\n    isSortON: true,\n  };\n};\n\nconst handleDontSortAlphabetically = (state) => {\n  return {\n    ...state,\n    isSortON: false,\n  };\n};\n\nconst initialState = { tasks: [], isSortON: true };\n\nexport default function taskReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return handleAddAlphabetically(state, action);\n\n    case \"ADD_TODO_IN_ORDER\":\n      return { ...state, tasks: [...state.tasks, action.payload] };\n\n    case \"DELETE_ALL\":\n      return {\n        ...state,\n        tasks: [],\n      };\n\n    case \"DELETE_TASK\":\n      return handleDeleteTask(state, action);\n\n    case \"COMPLETE_TASK\":\n      return handleCompleteTask(state, action);\n\n    case \"DELETE_CHECKED\":\n      return handleDeleteChecked(state);\n\n    case \"SORT_ALPHABETICALLY\":\n      return handleDontSortAlphabetically(state);\n\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport taskReducer from \"./reduser\";\n\nexport const store = createStore(taskReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}