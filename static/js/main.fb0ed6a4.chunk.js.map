{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.js","components/Task/StyledNewTask.styles.js","redux/actions/actions.types.js","components/Task/NewTask.js","redux/actions/actions.js","components/List/List.styles.js","components/Input/Input.styles.js","components/Input/Input.js","components/Sorting/SortingBlock.styles.js","components/Sorting/SortingBlock.js","components/List/List.js","App.js","redux/reducer/reduсer.js","index.js"],"names":["StyledTitle","styled","h6","Title","StyledNewTask","div","TaskContainer","Text","span","props","isCompleted","Date","p","ImgCheckBoxStyled","img","ImgDeleteStyled","ADD_TODO","DELETE_ALL","DELETE_TASK","COMPLETE_TASK","DELETE_CHECKED","TOGGLE_SORT_ALPHABETICALLY","ADD_TODO_IN_ORDER","SORT_TASKS","NewTask","task","defaultValue","text","className","style","fontSize","color","backgroundColor","borderRadius","marginRight","skipHover","focus","date","ImgDelete","dispatch","useDispatch","onClick","id","type","height","src","alt","ImgCheckBox","ListWrapper","MainBlock","StyledInput","input","AddButtonStyled","button","Input","handleSubmit","handleChangeValue","value","placeholder","onChange","onKeyDown","AddButton","addTaskByButton","SortingDiv","ToggleButtonStyled","SortButtonStyled","ButtonDeleteAllStyled","ButtonDeleteCheckedStyled","AlphabeticallyOrderToggle","sortingToggle","useState","buttonText","setButtonText","handlerOnclick","SortButton","ButtonDeleteChecked","ButtonDeleteAll","List","todoList","useSelector","state","tasks","isSortON","addTodo","oneMoreTask","nanoid","isSorted","dayjs","format","payload","addToDoDefaultByAlphabet","addToDoInOrder","setValue","e","keyCode","trim","target","map","item","App","handleDeleteTask","action","filter","handleCompleteTask","handleDeleteChecked","handleAddAlphabetically","sort","a","b","localeCompare","handleSort","sortedTasks","isSortedByAlphabet","initialState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEaA,EAAcC,IAAOC,GAAV,6M,OCAXC,EAAQ,WACnB,OAAO,cAACH,EAAD,0B,gCCDII,EAAgBH,IAAOI,IAAV,6LAYbC,EAAgBL,IAAOI,IAAV,0BAEbE,EAAON,IAAOO,KAAV,gKACb,SAACC,GAAD,OACMA,EAAMC,YACI,oEAGA,UAQPC,EAAOV,IAAOW,EAAV,uJAQJC,EAAoBZ,IAAOa,IAAV,0HAQjBC,EAAkBd,IAAOa,IAAV,kJC9CfE,EAAW,WACXC,EAAa,aACbC,EAAc,cACdC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAA6B,6BAC7BC,EAAoB,oBACpBC,EAAa,a,QCKbC,G,MAAU,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACrB,OACI,eAACrB,EAAD,WACI,cAAC,EAAD,CAAaqB,KAAMA,IACnB,cAAC,EAAD,CAAWA,KAAMA,IACjB,cAAClB,EAAD,CAAMG,YAAae,EAAKf,YAAxB,SACI,cAAC,IAAD,CACIgB,aAAcD,EAAKE,KACnBC,UAAW,cACXC,MAAO,CACHC,SAAU,OACVC,MAAO,QACPC,gBAAiB,oCACjBC,aAAc,MACdC,YAAa,OACbC,WAAW,EACXC,MAAO,CACHJ,gBAAiB,YAX7B,SAeK,QAGT,eAAC,EAAD,sBAAeP,EAAKY,aAKnBC,EAAY,SAAC,GAAY,IAAXb,EAAU,EAAVA,KACjBc,EAAWC,cACjB,OACI,cAACzB,EAAD,CACI0B,QAAS,kBAAMF,GC3BAG,ED2BoBjB,EAAKiB,GC3BjB,CAC/BC,KAAMzB,EACNwB,QAFsB,IAACA,GD4BfE,OAAO,OACPC,IAAI,YACJC,IAAI,WAKHC,EAAc,SAAC,GAAY,IAAXtB,EAAU,EAAVA,KACnBc,EAAWC,cACjB,OACI,cAAC3B,EAAD,CACI4B,QAAS,kBAAMF,GClCEG,EDkCoBjB,EAAKiB,GClCjB,CACjCC,KAAMxB,EACNuB,QAFwB,IAACA,GDmCjBE,OAAO,OACPC,IAAI,YACJC,IAAI,cE1DHE,EAAc/C,IAAOI,IAAV,kLAQX4C,EAAYhD,IAAOI,IAAV,8FCRT6C,GDcUjD,IAAOI,IAAV,0ECdOJ,IAAOkD,MAAV,ogBAyBXC,GAAkBnD,IAAOoD,OAAV,mTCzBfC,GAAQ,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,kBAAmBC,EAAW,EAAXA,MACpD,OACI,cAACP,EAAD,CACIP,KAAK,OACLc,MAAOA,EACPC,YAAa,kBACbC,SAAUH,EACVI,UAAWL,KAKVM,GAAY,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBACvB,OAAO,cAACV,GAAD,CAAiBX,QAASqB,EAA1B,kB,SCbEC,GAAa9D,IAAOI,IAAV,uHAMV2D,GAAqB/D,IAAOoD,OAAV,iTAiBlBY,GAAmBhE,IAAOoD,OAAV,iTAiBhBa,GAAwBjE,IAAOoD,OAAV,iTAiBrBc,GAA4BlE,IAAOoD,OAAV,kTClDzBe,GAA4B,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEvC,EAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMjC,EAAWC,cAEXiC,EAAiB,WACHD,EAAhBH,EAA8B,MAAuB,MACrD9B,ELgBwC,CAC5CI,KAAMtB,KKdN,OAAQ,eAAC2C,GAAD,CACJvB,QAAS,WACLgC,KAFA,gDAKgCF,MAI/BG,GAAa,WACtB,IAAMnC,EAAWC,cAEjB,OAAQ,cAACyB,GAAD,CAAkBxB,QAAS,kBAAMF,ELUb,CAC5BI,KAAMpB,KKXE,mBAMCoD,GAAsB,WAC/B,IAAMpC,EAAWC,cAEjB,OAAQ,cAAC2B,GAAD,CAA2B1B,QAAS,kBAAMF,ELZlB,CAChCI,KAAMvB,KKWE,6BAKCwD,GAAkB,WAC3B,IAAMrC,EAAWC,cACjB,OAAQ,cAAC0B,GAAD,CAAuBzB,QAAS,kBAAMF,ELjClB,CAC5BI,KAAM1B,KKgCE,yBC9BC4D,GAAO,WAChB,IAAMtC,EAAWC,cACXsC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SACxCZ,EAAgBU,aAAY,SAACC,GAAD,OAAWA,EAAME,YAC7CC,EAAU,SAACxD,GACb,IAIMyD,EAAc,CAAC1C,GAJV2C,eAIc1D,OAAMjB,aAHX,EAGwB4E,UAF3B,EAEqCjD,KADzCkD,MAAQC,OAAO,uBAItBjD,EADN8B,ENnBgC,SAACe,GAAD,MAAkB,CACtDzC,KAAM3B,EACNyE,QAASL,GMkBUM,CAAyBN,GNOlB,SAACA,GAAD,MAAkB,CAC5CzC,KAAMrB,EACNmE,QAASL,GMRUO,CAAeP,KAGlC,EAA0Bd,mBAAS,IAAnC,mBAAOb,EAAP,KAAcmC,EAAd,KAkBA,OACI,cAAC3C,EAAD,UACI,eAACD,EAAD,WACI,cAAC,GAAD,CACImC,QAASA,EACT5B,aArBK,SAACsC,GACA,KAAdA,EAAEC,SAAkBrC,EAAMsC,SAC1BZ,EAAQ1B,EAAMsC,QACdH,EAAS,MAmBDpC,kBAfU,SAACqC,GAAD,OAAOD,EAASC,EAAEG,OAAOvC,QAgBnCA,MAAOA,IAEX,cAAC,GAAD,CAAWK,gBAhBC,WAChBL,EAAMsC,SACNZ,EAAQ1B,GACRmC,EAAS,QAcL,cAACtF,EAAD,UACKwE,EAASmB,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAASzE,KAAMyE,GAAWA,EAAKxD,SAGvC,eAACqB,GAAD,WACI,cAAC,GAAD,CAA2BM,cAAeA,IAC1C,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,aCzDL8B,OATf,WACI,OACI,sBAAKvE,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,GAAD,Q,yBCANwE,GAAmB,SAACpB,EAAOqB,GAC7B,OAAO,6BACArB,GADP,IAEIC,MAAOD,EAAMC,MAAMqB,QAAO,SAACJ,GAAD,OAAUA,EAAKxD,KAAO2D,EAAO3D,SAIzD6D,GAAqB,SAACvB,EAAOqB,GAC/B,OAAO,6BACArB,GADP,IAEIC,MAAOD,EAAMC,MAAMgB,KAAI,SAACC,GAAD,OACnBA,EAAKxD,KAAO2D,EAAO3D,GAAKwD,EAAxB,6BAAmCA,GAAnC,IAAyCxF,aAAcwF,EAAKxF,oBAKlE8F,GAAsB,SAACxB,GACzB,OAAO,6BACAA,GADP,IAEIC,MAAOD,EAAMC,MAAMqB,QAAO,SAACJ,GAAD,OAA+B,IAArBA,EAAKxF,kBAI3C+F,GAA0B,SAACzB,EAAOqB,GASpC,MAAO,CACHpB,MATQ,6BACLD,GADK,IAERC,MAAM,GAAD,oBAAMD,EAAMC,OAAZ,CAAmBoB,EAAOZ,UAC/BP,UAAU,IAEeD,MAAMyB,MAAK,SAACC,EAAGC,GAAJ,OACpCD,EAAEhF,KAAKkF,cAAcD,EAAEjF,SAIvBuD,UAAU,IAIZ4B,GAAa,SAAC9B,GAChB,IAIM+B,EAJM,6BACL/B,GADK,IAERC,MAAM,aAAKD,EAAMC,SAEQA,MAAMyB,MAAK,SAACC,EAAGC,GAAJ,OACpCD,EAAEhF,KAAKkF,cAAcD,EAAEjF,SAG3B,OADAoF,EAAYd,KAAI,SAACC,GAAD,oBAAC,gBAAcA,GAAf,IAAqBc,oBAAoB,OAClD,6BACAhC,GADP,IAEIC,MAAO8B,KAITE,GAAe,CAAChC,MAAO,GAAIC,UAAU,GCrDpC,IAAMgC,GAAQC,cDuDN,WAAoD,IAA/BnC,EAA8B,uDAAtBiC,GAAcZ,EAAQ,uCAC9D,OAAQA,EAAO1D,MACX,KAAK3B,EACD,OAAOyF,GAAwBzB,EAAOqB,GAE1C,KAAK/E,EACD,OAAO,6BAAI0D,GAAX,IAAkBC,MAAM,GAAD,oBAAMD,EAAMC,OAAZ,CAAmBoB,EAAOZ,YAErD,KAAKxE,EACD,OAAO,6BACA+D,GADP,IAEIC,MAAO,KAGf,KAAK5D,EACD,OAAO,6BACA2D,GADP,IAEIE,UAAWF,EAAME,WAGzB,KAAKhE,EACD,OAAOkF,GAAiBpB,EAAOqB,GAEnC,KAAKlF,EACD,OAAOoF,GAAmBvB,EAAOqB,GAErC,KAAKjF,EACD,OAAOoF,GAAoBxB,GAE/B,KAAKzD,EACD,OAAOuF,GAAW9B,GAEtB,QACI,OAAOA,KCxF2BoC,OAAOC,8BAAgCD,OAAOC,gCAE5FC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.fb0ed6a4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h6`\n  font-family: \"Praise\", cursive;\n  color: #182335;\n  font-size: 60px;\n  text-align: center;\n  margin-block-start: 0.1em;\n  margin-block-end: 0.1em;\n  padding-bottom: 0;\n`;\n","import { StyledTitle } from \"./Title.styles\";\n\nexport const Title = () => {\n  return <StyledTitle>To-do list</StyledTitle>;\n};\n","import styled from \"styled-components\";\n\nexport const StyledNewTask = styled.div`\n  font-size: 23px;\n  padding-left: 15px;\n  margin: 10px;\n  background: #d0c08aff;\n  border-radius: 12px;\n\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\nexport const TaskContainer = styled.div``;\n\nexport const Text = styled.span`\n  ${(props) =>\n          props.isCompleted\n                  ? \"text-decoration: line-through;\\n\" +\n                  \"  color: gray;\\n\" +\n                  \"  transition: 1s;\"\n                  : \"none\"};\n  display: flex;\n  margin-top: 0;\n  line-height: 1.2;\n  font-family: \"Raleway\", sans-serif;\n  margin-block-end: 0.1em;\n`;\n\nexport const Date = styled.p`\n  font-size: 15px;\n  text-align: right;\n  margin: 0 5px 5px 5px;\n  padding: 3px;\n  font-family: \"Roboto\", sans-serif;\n`;\n\nexport const ImgCheckBoxStyled = styled.img`\n  margin: 10px 3px 5px 3px;\n\n  :hover {\n    transform: scale(1.2);\n    transition: 0.4s;\n`;\n\nexport const ImgDeleteStyled = styled.img`\n  margin: 10px 3px 5px 3px;\n  padding-bottom: 2px;\n\n  :hover {\n    transform: scale(1.2);\n    transition: 0.4s;\n`;\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_ALL = \"DELETE_ALL\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const COMPLETE_TASK = \"COMPLETE_TASK\";\r\nexport const DELETE_CHECKED = \"DELETE_CHECKED\";\r\nexport const TOGGLE_SORT_ALPHABETICALLY = \"TOGGLE_SORT_ALPHABETICALLY\";\r\nexport const ADD_TODO_IN_ORDER = \"ADD_TODO_IN_ORDER\";\r\nexport const SORT_TASKS = \"SORT_TASKS\";\r\n","import {\n    Date,\n    ImgCheckBoxStyled,\n    ImgDeleteStyled,\n    StyledNewTask,\n    Text,\n} from \"./StyledNewTask.styles\";\nimport {useDispatch} from \"react-redux\";\nimport {completeTask, deleteTask} from \"../../redux/actions/actions\";\nimport {EditText} from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\n\nexport const NewTask = ({task}) => {\n    return (\n        <StyledNewTask>\n            <ImgCheckBox task={task}/>\n            <ImgDelete task={task}/>\n            <Text isCompleted={task.isCompleted}>\n                <EditText\n                    defaultValue={task.text}\n                    className={\"customInput\"}\n                    style={{\n                        fontSize: \"30px\",\n                        color: \"white\",\n                        backgroundColor: \"linear-gradient(#182335, #e15546)\",\n                        borderRadius: \"7px\",\n                        marginRight: \"10px\",\n                        skipHover: true,\n                        focus: {\n                            backgroundColor: \"#fcfff5\",\n                        },\n                    }}\n                >\n                    {\" \"}\n                </EditText>\n            </Text>\n            <Date>Created:{task.date}</Date>\n        </StyledNewTask>\n    );\n};\n\nexport const ImgDelete = ({task}) => {\n    const dispatch = useDispatch();\n    return (\n        <ImgDeleteStyled\n            onClick={() => dispatch(deleteTask(task.id))}\n            height=\"36px\"\n            src=\"trash.svg\"\n            alt=\"trash\"\n        />\n    );\n};\n\nexport const ImgCheckBox = ({task}) => {\n    const dispatch = useDispatch();\n    return (\n        <ImgCheckBoxStyled\n            onClick={() => dispatch(completeTask(task.id))}\n            height=\"36px\"\n            src=\"check.svg\"\n            alt=\"checkbox\"\n        />\n    );\n};\n","import {\n    ADD_TODO, ADD_TODO_IN_ORDER,\n    COMPLETE_TASK,\n    DELETE_ALL,\n    DELETE_CHECKED,\n    DELETE_TASK, SORT_TASKS,\n    TOGGLE_SORT_ALPHABETICALLY\n} from \"./actions.types\";\n\nexport const addToDoDefaultByAlphabet = (oneMoreTask) => ({\n    type: ADD_TODO,\n    payload: oneMoreTask,\n});\n\nexport const deleteAll = () => ({\n    type: DELETE_ALL,\n});\n\nexport const deleteTask = (id) => ({\n    type: DELETE_TASK,\n    id,\n});\n\nexport const completeTask = (id) => ({\n    type: COMPLETE_TASK,\n    id,\n});\n\nexport const deleteChecked = () => ({\n    type: DELETE_CHECKED,\n});\n\nexport const toggleAlphabeticallyOrder = () => ({\n    type: TOGGLE_SORT_ALPHABETICALLY,\n});\n\nexport const addToDoInOrder = (oneMoreTask) => ({\n    type: ADD_TODO_IN_ORDER,\n    payload: oneMoreTask,\n});\n\nexport const sortTasks = () => ({\n    type: SORT_TASKS,\n});\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div`\n  font-family: \"Raleway\", sans-serif;\n  font-size: 15px;\n  background-color: #182335;\n  max-width: 100%;\n  width: 600px;\n  border-radius: 12px;\n`;\nexport const MainBlock = styled.div`\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Control = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n  background: #fcfff5;\n  box-sizing: border-box;\n  width: 500px;\n  max-width: 80%;\n  height: 50px;\n  font-size: 23px;\n  font-weight: normal;\n  padding-left: 15px;\n  border: 5px solid #b04337;\n  border-radius: 12px;\n  color: gray;\n  font-family: \"Raleway\", sans-serif;\n  margin-bottom: 14px;\n\n  :focus {\n    outline: 0;\n    border: 5px solid #b04337ff;\n    background-color: #eae4cc;\n    transition: 0.7s linear;\n    font-size: 23px;\n    color: rgb(32, 32, 32);\n  }\n`;\n\nexport const AddButtonStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 8px 20px 16px 15px;\n  height: 40px;\n  width: 15.5%;\n  border-radius: 7px;\n  margin: 5px 0 5px 0.5em;\n  font-size: 20px;\n  text-align: center;\n\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n","import {AddButtonStyled, StyledInput} from \"./Input.styles\";\n\nexport const Input = ({handleSubmit, handleChangeValue, value}) => {\n    return (\n        <StyledInput\n            type=\"text\"\n            value={value}\n            placeholder={\"Enter your task\"}\n            onChange={handleChangeValue}\n            onKeyDown={handleSubmit}\n        />\n    );\n};\n\nexport const AddButton = ({addTaskByButton}) => {\n    return <AddButtonStyled onClick={addTaskByButton}>Add</AddButtonStyled>;\n};\n","import styled from \"styled-components\";\n\nexport const SortingDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  font-family: \"Raleway\", sans-serif;\n`;\n\nexport const ToggleButtonStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 10px 20px 10px 5px;\n  height: auto;\n  width: 180px;\n  min-width: 21%;\n  border-radius: 7px;\n  margin: 5px 5px 5px 10px;\n  font-size: 1.1em;\n\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\nexport const SortButtonStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 10px 20px 10px 10px;\n  height: auto;\n  width: 180px;\n  min-width: 21%;\n  border-radius: 7px;\n  margin: 5px 5px 5px 5px;\n  font-size: 1.3em;\n\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\nexport const ButtonDeleteAllStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 10px 20px 10px 10px;\n  height: auto;\n  min-width: 21%;\n  width: 180px;\n  border-radius: 7px;\n  margin: 5px 5px 5px 5px;\n  font-size: 1.3em;\n\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\nexport const ButtonDeleteCheckedStyled = styled.button`\n  background-color: #e15546;\n  border: 2px none;\n  color: white;\n  padding: 10px 20px 10px 10px;\n  height: auto;\n  min-width: 21%;\n  width: 180px;\n  border-radius: 7px;\n  margin: 5px 10px 5px 5px;\n  font-size: 1.3em;\n\n  :hover {\n    background-color: #eeaf9d;\n  }\n`;\n\n\n","import {\n    ButtonDeleteAllStyled, ButtonDeleteCheckedStyled, SortButtonStyled, ToggleButtonStyled,\n} from \"./SortingBlock.styles\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    deleteAll, deleteChecked, sortTasks, toggleAlphabeticallyOrder,\n} from \"../../redux/actions/actions\";\nimport {useState} from \"react\";\n\nexport const AlphabeticallyOrderToggle = ({sortingToggle}) => {\n\n    const [buttonText, setButtonText] = useState(\"ON\");\n    const dispatch = useDispatch();\n\n    const handlerOnclick = () => {\n        sortingToggle ? setButtonText(\"OFF\") : setButtonText(\"ON\")\n        dispatch(toggleAlphabeticallyOrder());\n    };\n\n    return (<ToggleButtonStyled\n        onClick={() => {\n            handlerOnclick();\n        }}\n    >\n        Adding tasks in alphabetical order {buttonText}\n    </ToggleButtonStyled>);\n};\n\nexport const SortButton = () => {\n    const dispatch = useDispatch();\n\n    return (<SortButtonStyled onClick={() => dispatch(sortTasks())}>Sort\n        </SortButtonStyled>\n\n    )\n}\n\nexport const ButtonDeleteChecked = () => {\n    const dispatch = useDispatch();\n\n    return (<ButtonDeleteCheckedStyled onClick={() => dispatch(deleteChecked())}>\n        Delete checked\n    </ButtonDeleteCheckedStyled>);\n};\n\nexport const ButtonDeleteAll = () => {\n    const dispatch = useDispatch();\n    return (<ButtonDeleteAllStyled onClick={() => dispatch(deleteAll())}>\n        Delete all\n    </ButtonDeleteAllStyled>);\n};\n","import dayjs from \"dayjs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TaskContainer} from \"../Task/StyledNewTask.styles\";\nimport {NewTask} from \"../Task/NewTask\";\nimport {ListWrapper, MainBlock} from \"./List.styles\";\nimport {AddButton, Input} from \"../Input/Input\";\nimport {nanoid} from \"@reduxjs/toolkit\";\nimport {useState} from \"react\";\nimport {SortingDiv} from \"../Sorting/SortingBlock.styles\";\nimport {addToDoDefaultByAlphabet, addToDoInOrder} from \"../../redux/actions/actions\";\nimport {\n    ButtonDeleteAll,\n    ButtonDeleteChecked,\n    AlphabeticallyOrderToggle, SortButton,\n} from \"../Sorting/SortingBlock\";\n\n\nexport const List = () => {\n    const dispatch = useDispatch();\n    const todoList = useSelector((state) => state.tasks);\n    const sortingToggle = useSelector((state) => state.isSortON);\n    const addTodo = (text) => {\n        const id = nanoid();\n        const isCompleted = false;\n        const isSorted = false;\n        const date = dayjs().format(\"DD/MM/YYYY, HH:mm \");\n        const oneMoreTask = {id, text, isCompleted, isSorted, date};\n\n        sortingToggle\n            ? dispatch(addToDoDefaultByAlphabet(oneMoreTask))\n            : dispatch(addToDoInOrder(oneMoreTask));\n    };\n\n    const [value, setValue] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        if (e.keyCode === 13 && value.trim()) {\n            addTodo(value.trim());\n            setValue(\"\");\n        }\n    };\n\n    const handleChangeValue = (e) => setValue(e.target.value);\n\n    const addTaskByButton = () => {\n        if (value.trim()) {\n            addTodo(value);\n            setValue(\"\");\n        }\n    };\n\n    return (\n        <MainBlock>\n            <ListWrapper>\n                <Input\n                    addTodo={addTodo}\n                    handleSubmit={handleSubmit}\n                    handleChangeValue={handleChangeValue}\n                    value={value}\n                />\n                <AddButton addTaskByButton={addTaskByButton}/>\n                <TaskContainer>\n                    {todoList.map((item) => (\n                        <NewTask task={item} key={item.id}/>\n                    ))}\n                </TaskContainer>\n                <SortingDiv>\n                    <AlphabeticallyOrderToggle sortingToggle={sortingToggle}/>\n                    <SortButton/>\n                    <ButtonDeleteAll/>\n                    <ButtonDeleteChecked/>\n                </SortingDiv>\n            </ListWrapper>\n        </MainBlock>\n    );\n};\n","import React from \"react\";\nimport {Title} from \"./components/Title/Title\";\nimport {List} from \"./components/List/List\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Title/>\n            <List/>\n        </div>\n    );\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    ADD_TODO_IN_ORDER, COMPLETE_TASK,\n    DELETE_ALL, DELETE_CHECKED,\n    DELETE_TASK, SORT_TASKS,\n    TOGGLE_SORT_ALPHABETICALLY\n} from \"../actions/actions.types\";\n\nconst handleDeleteTask = (state, action) => {\n    return {\n        ...state,\n        tasks: state.tasks.filter((item) => item.id !== action.id),\n    };\n};\n\nconst handleCompleteTask = (state, action) => {\n    return {\n        ...state,\n        tasks: state.tasks.map((item) =>\n            item.id !== action.id ? item : {...item, isCompleted: !item.isCompleted}\n        ),\n    };\n};\n\nconst handleDeleteChecked = (state) => {\n    return {\n        ...state,\n        tasks: state.tasks.filter((item) => item.isCompleted === false),\n    };\n};\n\nconst handleAddAlphabetically = (state, action) => {\n    let newState = {\n        ...state,\n        tasks: [...state.tasks, action.payload],\n        isSortON: false,\n    };\n    const sortedTasks = newState.tasks.sort((a, b) =>\n        a.text.localeCompare(b.text)\n    );\n    return {\n        tasks: sortedTasks,\n        isSortON: true,\n    };\n};\n\nconst handleSort = (state) => {\n    let newState = {\n        ...state,\n        tasks: [...state.tasks],\n    };\n    const sortedTasks = newState.tasks.sort((a, b) =>\n        a.text.localeCompare(b.text)\n    );\n    sortedTasks.map((item) => ({...item, isSortedByAlphabet: true}));\n    return {\n        ...state,\n        tasks: sortedTasks,\n    }\n}\n\nconst initialState = {tasks: [], isSortON: true};\n\nexport default function taskReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return handleAddAlphabetically(state, action);\n\n        case ADD_TODO_IN_ORDER:\n            return {...state, tasks: [...state.tasks, action.payload]};\n\n        case DELETE_ALL:\n            return {\n                ...state,\n                tasks: [],\n            };\n\n        case TOGGLE_SORT_ALPHABETICALLY:\n            return {\n                ...state,\n                isSortON: !state.isSortON,\n            };\n\n        case DELETE_TASK:\n            return handleDeleteTask(state, action);\n\n        case COMPLETE_TASK:\n            return handleCompleteTask(state, action);\n\n        case DELETE_CHECKED:\n            return handleDeleteChecked(state);\n\n        case SORT_TASKS:\n            return handleSort(state);\n\n        default:\n            return state;\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {createStore,} from \"redux\";\nimport taskReducer from \"./redux/reducer/reduсer\";\n\nexport const store = createStore(taskReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}